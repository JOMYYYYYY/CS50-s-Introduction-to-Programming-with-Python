sort1 uses: Bubble Sort

How do you know?: for the sorted50000 and the reversed50000, sorts demonstated a huge different on time spenting.

sort2 uses: Merge Sort

How do you know?: for the reversed50000.txt, sort1 and sort2 spent more than 8s
while sort2 takes only 2.8s. And for the same length of the sorted and the reversed, the
sort2 spents almost the same amount of time.

sort3 uses: Selection Sort

How do you know?: generally spent more times than other two in most cases.


time ./sort1 sorted5000.txt 0.041s
time ./sort1 sorted10000.txt 0.066s
time ./sort1 sorted50000.txt 1.897s

time ./sort1 reversed5000.txt 0.078s
time ./sort1 reversed50000.txt 8.023
time ./sort1 random50000.txt 10.167s
_____________________________________

time ./sort2 sorted5000.txt 0.026s
time ./sort2 sorted10000.txt 0.063s
time ./sort2 sorted50000.txt 2.829

time ./sort2 reversed5000.txt 0.024s
time ./sort2 reversed50000.txt 2.055s
time ./sort2 random50000.txt 1.544s

___________________________________

time ./sort3 sorted5000.txt 0.048s
time ./sort3 reversed50000.txt 9.707s
time ./sort3 sorted50000.txt 8.217s
time ./sort3 random50000.txt 5.081